loggers:
    '':
        level: INFO
        handlers: [stdout, default, syslog]
    zato:
        level: INFO
        handlers: [stdout, default, syslog]
        qualname: zato
        propagate: false
    zato_access_log:
        level: INFO
        handlers: [http_access_log]
        qualname: zato_access_log
        propagate: false
    zato_admin:
        level: INFO
        handlers: [admin]
        qualname: zato_admin
        propagate: false
    zato_connector:
        level: INFO
        handlers: [connector]
        qualname: zato_connector
        propagate: false
    zato_kvdb:
        level: INFO
        handlers: [kvdb]
        qualname: zato_kvdb
        propagate: false
    zato_pubsub:
        level: INFO
        handlers: [pubsub]
        qualname: zato_pubsub
        propagate: false
    zato_pubsub_overflown:
        level: INFO
        handlers: [pubsub_overflown]
        qualname: zato_pubsub_overflown
        propagate: false
    zato_rbac:
        level: INFO
        handlers: [rbac]
        qualname: zato_rbac
        propagate: false
    zato_scheduler:
        level: INFO
        handlers: [scheduler]
        qualname: zato_scheduler
        propagate: false
    zato_singleton:
        level: INFO
        handlers: [singleton]
        qualname: zato_singleton
        propagate: false

handlers:
    default:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/server.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    stdout:
        formatter: colour
        class: logging.StreamHandler
        stream: ext://sys.stdout
    http_access_log:
        formatter: http_access_log
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/http_access.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    admin:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/admin.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    connector:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/connector.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    kvdb:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/kvdb.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    pubsub:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/pubsub.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    pubsub_overflown:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/pubsub-overflown.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    rbac:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/rbac.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    scheduler:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/scheduler.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    singleton:
        formatter: default
        class: logging.handlers.ConcurrentRotatingFileHandler
        filename: './logs/singleton.log'
        mode: 'a'
        maxBytes: 20000000
        backupCount: 10
    syslog:
        class: logging.handlers.SysLogHandler
        formatter: syslog
        address: ['localhost', 11002]
        facility: 'daemon'
        level: debug

formatters:
    default:
        format: '%(asctime)s - %(levelname)s - %(process)d:%(threadName)s - %(name)s:%(lineno)d - %(message)s'
    syslog:
        format: '%(host)s: %(asctime)s - %(levelname)s - %(process)d:%(threadName)s - %(name)s:%(lineno)d - %(message)s'
    http_access_log:
        format: '%(remote_ip)s %(cid_resp_time)s "%(channel_name)s" [%(req_timestamp)s] "%(method)s %(path)s %(http_version)s" %(status_code)s %(response_size)s "-" "%(user_agent)s"'
    colour:
        format: '%(asctime)s - %(levelname)s - %(process)d:%(threadName)s - %(name)s:%(lineno)d - %(message)s'
        (): zato.common.util.ColorFormatter

version: 1
